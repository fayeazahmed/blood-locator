{"version":3,"sources":["DonorForm.jsx","Nav.jsx","DonorInfo.jsx","App.js","index.js"],"names":["DonorForm","submitForm","closeButton","useState","name","setName","bg","setBg","address","setAddress","contact","setContact","password","setPassword","onClick","e","stopPropagation","className","onSubmit","event","preventDefault","style","float","cursor","fontSize","borderRadius","aria-hidden","htmlFor","onChange","target","value","type","id","required","defaultValue","Nav","handleBloodGroup","showInfo","setShowInfo","DonorInfo","donor","handleEntryDelete","_id","bloodGroup","passwordInput","setPasswordInput","invalid","setInvalid","axios","post","then","catch","error","setTimeout","TOKEN","App","width","height","latitude","longitude","zoom","viewport","setViewport","donors","setDonors","modal","setModal","submission","setSubmission","lat","setLat","long","setLong","setBloodGroup","showPopUp","setShowPopUp","entryDeleted","setEntryDeleted","useEffect","a","get","res","data","getDonor","openModal","formData","mapboxApiAccessToken","onViewportChange","onDblClick","lngLat","doubleClickZoom","margin","padding","positionOptions","enableHighAccuracy","trackUserLocation","onGeolocate","obj","coords","map","offsetLeft","offsetTop","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEe,SAASA,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YAAe,EAQrCC,mBAAS,IAR4B,mBAQtDC,EARsD,KAQhDC,EARgD,OASzCF,mBAAS,IATgC,mBAStDG,EATsD,KASlDC,EATkD,OAU/BJ,mBAAS,IAVsB,mBAUtDK,EAVsD,KAU7CC,EAV6C,OAW/BN,mBAAS,IAXsB,mBAWtDO,EAXsD,KAW7CC,EAX6C,OAY7BR,mBAAS,IAZoB,mBAYtDS,EAZsD,KAY5CC,EAZ4C,KAmB7D,OACE,0BAAMC,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAAmBC,UAAU,aAAaC,SAN/C,SAACC,GACpBA,EAAMC,iBACNnB,EAAWG,EAAME,EAAIE,EAASE,EAASE,KAKrC,uBACEK,UAAU,2CACVI,MAtBoB,CACxBC,MAAO,QACPC,OAAQ,UACRC,SAAU,GACVC,aAAc,IAmBVC,cAAY,OACZZ,QAASZ,IAEX,2BAAOyB,QAAQ,QAAf,SACA,2BACEC,SAAU,SAACb,GAAD,OAAOV,EAAQU,EAAEc,OAAOC,QAClCA,MAAO1B,EACP2B,KAAK,OACLC,GAAG,OACHf,UAAU,eACVgB,UAAQ,IAEV,2BAAON,QAAQ,MAAf,gBACH,4BACOC,SAAU,SAACT,GAAD,OAAWZ,EAAMY,EAAMU,OAAOC,QACxC1B,KAAK,KACL4B,GAAG,KACHE,aAAa,KACbjB,UAAU,gBAEV,4BAAQa,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,QAEJ,2BAAOH,QAAQ,WAAf,YACA,2BACEC,SAAU,SAACb,GAAD,OAAON,EAAWM,EAAEc,OAAOC,QACrCA,MAAOtB,EACPuB,KAAK,OACLC,GAAG,UACHf,UAAU,eACVgB,UAAQ,IAEV,2BAAON,QAAQ,WAAf,iBACA,2BACEC,SAAU,SAACb,GAAD,OAAOJ,EAAWI,EAAEc,OAAOC,QACrCA,MAAOpB,EACPqB,KAAK,OACLC,GAAG,UACHf,UAAU,eACVgB,UAAQ,IAEV,2BAAON,QAAQ,YAAf,YACA,2BACEC,SAAU,SAACb,GAAD,OAAOF,EAAYE,EAAEc,OAAOC,QACtCA,MAAOlB,EACPmB,KAAK,WACLC,GAAG,WACHf,UAAU,eACVgB,UAAQ,IAEV,2BAAOhB,UAAU,qBAAjB,6CAGA,4BAAQA,UAAU,kCAAlB,YCnFS,SAASkB,EAAT,GAAoC,IAArBC,EAAoB,EAApBA,iBAAoB,EAChBjC,oBAAS,GADO,mBACzCkC,EADyC,KAC/BC,EAD+B,KAGhD,OACE,qCACDxB,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBACbC,UAAU,4CAFZ,WAGW,kBAAMqB,GAAY,MAE3B,6BACE,uBAAGrB,UAAU,iBAAb,8CAGA,uBAAGA,UAAU,sBAAb,MACA,uBAAGA,UAAU,iBAAb,yCACwC,+CAG1C,yBAAKA,UAAU,kBACb,iDACA,4BACEW,SAAU,SAACT,GAAD,OAAWiB,EAAiBjB,EAAMU,OAAOC,QACnD1B,KAAK,qBACL4B,GAAG,qBACHE,aAAa,KACbjB,UAAU,gBAEV,4BAAQa,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,SAGJ,yBAAKb,UAAU,qBACb,4BACEA,UAAU,8BACVH,QAAS,SAACC,GACRA,EAAEC,kBACFsB,GAAaD,KAGf,uBAAGpB,UAAU,oBAAoBS,cAAY,UAE9CW,GACC,uBAAGpB,UAAU,YAAb,6MC/CK,SAASsB,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,kBACjCC,EAA4CF,EAA5CE,IAAKtC,EAAuCoC,EAAvCpC,KAAMuC,EAAiCH,EAAjCG,WAAYnC,EAAqBgC,EAArBhC,QAASE,EAAY8B,EAAZ9B,QADsB,EAEpBP,oBAAS,GAFW,mBAEvDyC,EAFuD,KAExCC,EAFwC,OAG9B1C,mBAAS,IAHqB,mBAGvDS,EAHuD,KAG7CC,EAH6C,OAIhCV,oBAAS,GAJuB,mBAIvD2C,EAJuD,KAI9CC,EAJ8C,KAsB9D,OACE,yBAAK9B,UAAU,cACb,uBAAGA,UAAU,aAAab,GAC1B,uBAAGa,UAAU,yBACX,gCAAS0B,IAEX,uBAAG1B,UAAU,aAAaT,GAC1B,uBAAGS,UAAU,aACX,2BAAIP,IAEN,yBAAKO,UAAU,qCACb,4BACEH,QAAS,kBAAM+B,GAAiB,IAChC5B,UAAU,mCAFZ,gBAMC2B,GACC,0BAAM1B,SAlCO,SAACH,GACpBA,EAAEK,iBACF4B,IACGC,KADH,4BAC6BP,GAAO,CAChC9B,aAEDsC,MAAK,kBAAMT,OACXU,OAAM,SAACC,GACNvC,EAAY,IACZkC,GAAW,GACXM,YAAW,WACTN,GAAW,KACV,UAuBC,2BACEhB,KAAK,WACL3B,KAAK,WACL0B,MAAOlB,EACPK,UAAU,8BACVW,SAAU,SAACb,GAAD,OAAOF,EAAYE,EAAEc,OAAOC,WAI3CgB,GACC,yBAAK7B,UAAU,yBACb,2BAAOA,UAAU,qBAAjB,kBACA,2BAAOA,UAAU,qBAAjB,wBC8EZ,IAAMqC,EACJ,iGAEaC,EAjIf,WAAgB,IAAD,EACmBpD,mBAAS,CACvCqD,MAAO,QACPC,OAAQ,QACRC,SAAU,UACVC,UAAW,WACXC,KAAM,KANK,mBACNC,EADM,KACIC,EADJ,OAQe3D,mBAAS,MARxB,mBAQN4D,EARM,KAQEC,EARF,OASa7D,oBAAS,GATtB,mBASN8D,EATM,KASCC,EATD,OAUuB/D,oBAAS,GAVhC,mBAUNgE,EAVM,KAUMC,EAVN,OAWSjE,mBAAS,MAXlB,mBAWNkE,EAXM,KAWDC,EAXC,OAYWnE,mBAAS,MAZpB,mBAYNoE,EAZM,KAYAC,EAZA,OAauBrE,mBAAS,MAbhC,mBAaNwC,EAbM,KAaM8B,EAbN,OAcqBtE,mBAAS,IAd9B,mBAcNuE,EAdM,KAcKC,EAdL,OAe2BxE,mBAAS,GAfpC,mBAeNyE,EAfM,KAeQC,EAfR,KAiBbC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACA/B,IAAMgC,IAAI,eADV,OACZC,EADY,OAEfjB,EAAUiB,EAAIC,MAFC,2CAAH,qDAKdC,KACC,CAAChB,EAAYS,IAEhB,IAAMQ,EAAS,uCAAG,WAAOf,EAAKE,GAAZ,SAAAQ,EAAA,sDAChBb,GAAUD,GACVK,EAAOD,GACPG,EAAQD,GAHQ,2CAAH,wDAgBT9B,EAAoB,WACxBoC,EAAgBD,EAAe,IAG3B3E,EAAU,uCAAG,WAAOG,EAAME,EAAIE,EAASE,EAASE,GAAnC,eAAAmE,EAAA,6DACXM,EAAW,CACfjF,OACAuC,WAAYrC,EACZE,UACAE,UACAE,WACA8C,SAAUW,EACVV,UAAWY,GARI,SAUXvB,IAAMC,KAAK,cAAeoC,GAVf,OAWjBnB,GAAS,GACTE,GAAc,GACdf,YAAW,WACTe,GAAc,KACb,MAfc,2CAAH,8DAkBhB,OACE,yBAAKnD,UAAU,OAChB,kBAACkB,EAAD,CAAKC,iBA5BmB,SAAC9B,GAC3BmE,EAAcnE,GACd4D,GAAS,MA2BJ,kBAAC,IAAD,eACEoB,qBAAsBhC,GAClBO,EAFN,CAGE0B,iBAAkBzB,EAClBhD,QAAS,kBAAM6D,EAAa,KAC5Ba,WAAY,SAACrE,GAAD,OAAWiE,EAAUjE,EAAMsE,OAAO,GAAItE,EAAMsE,OAAO,KAC/DC,iBAAiB,IAEhBvB,EACC,yBAAKlD,UAAU,iBACb,uBAAGA,UAAU,cAAcS,cAAY,SACvC,0DAEA,KACHuC,GACC,kBAACjE,EAAD,CACEC,WAAYA,EACZC,YAAa,kBAAMgE,GAAS,MAGhC,kBAAC,IAAD,CACE7C,MAxDe,CACrBC,MAAO,OACPqE,OAAQ,aACRC,QAAS,QAsDHC,gBAAiB,CAAEC,oBAAoB,GACvCC,mBAAmB,EACnBC,YAAa,SAACC,GAAD,OACXb,EAAUa,EAAIC,OAAOxC,SAAUuC,EAAIC,OAAOvC,cAG7CI,EACGA,EAAOoC,KAAI,SAAC3D,GACV,OAAOA,EAAMG,aAAeA,EAC1B,kBAAC,IAAD,CACEe,SAAUlB,EAAMkB,SAChBC,UAAWnB,EAAMmB,UACjByC,YAAa,GACbC,WAAY,GACZC,IAAK9D,EAAME,KAEX,uBACE5B,QAAS,kBAAM6D,EAAa,eAAGnC,EAAME,KAAM,KAC3CzB,UAAU,+BACVI,MAAO,CAAEE,OAAQ,WACjBG,cAAY,UAEY,IAAzBgD,EAAUlC,EAAME,KACf,kBAACH,EAAD,CACEE,kBAAmBA,EACnBD,MAAOA,IAEP,MAEJ,QAEN,QC3HZ+D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a677d7c3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function DonorForm({ submitForm, closeButton }) {\r\n  const closeButtonStyles = {\r\n    float: \"right\",\r\n    cursor: \"pointer\",\r\n    fontSize: 20,\r\n    borderRadius: 10,\r\n  };\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [bg, setBg] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    submitForm(name, bg, address, contact, password);\r\n  };\r\n\r\n  return (\r\n    <form onClick={(e) => e.stopPropagation()} className=\"donor-form\" onSubmit={handleSubmit}>\r\n      <i\r\n        className=\"fa fa-times-circle btn btn-sm btn-danger\"\r\n        style={closeButtonStyles}\r\n        aria-hidden=\"true\"\r\n        onClick={closeButton}\r\n      ></i>\r\n      <label htmlFor=\"name\">Name:</label>\r\n      <input\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n        type=\"text\"\r\n        id=\"name\"\r\n        className=\"form-control\"\r\n        required\r\n      />\r\n      <label htmlFor=\"bg\">Blood group:</label>\r\n\t  <select\r\n          onChange={(event) => setBg(event.target.value)}\r\n          name=\"bg\"\r\n          id=\"bg\"\r\n          defaultValue=\"A+\"\r\n          className=\"form-control\"\r\n        >\r\n          <option value=\"A+\">A+</option>\r\n          <option value=\"A-\">A-</option>\r\n          <option value=\"B+\">B+</option>\r\n          <option value=\"B-\">B-</option>\r\n          <option value=\"O+\">O+</option>\r\n          <option value=\"O-\">O-</option>\r\n          <option value=\"AB+\">AB+</option>\r\n          <option value=\"AB-\">AB-</option>\r\n        </select>\r\n      <label htmlFor=\"address\">Address:</label>\r\n      <input\r\n        onChange={(e) => setAddress(e.target.value)}\r\n        value={address}\r\n        type=\"text\"\r\n        id=\"address\"\r\n        className=\"form-control\"\r\n        required\r\n      />\r\n      <label htmlFor=\"contact\">Contact info:</label>\r\n      <input\r\n        onChange={(e) => setContact(e.target.value)}\r\n        value={contact}\r\n        type=\"text\"\r\n        id=\"contact\"\r\n        className=\"form-control\"\r\n        required\r\n      />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        value={password}\r\n        type=\"password\"\r\n        id=\"password\"\r\n        className=\"form-control\"\r\n        required\r\n      />\r\n      <small className=\"d-block text-left\">\r\n        Add a password to delete your entry later\r\n      </small>\r\n      <button className=\"btn btn-block btn-success my-3\">Add me!</button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Nav({ handleBloodGroup }) {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  return (\r\n    <div\r\n\t  onClick={e => e.stopPropagation()}\r\n      className=\"nav-class d-flex justify-content-between\"\r\n      onClick={() => setShowInfo(false)}\r\n    >\r\n      <div>\r\n        <p className=\"m-0 text-left\">\r\n          *Zoom in to your location and double click\r\n        </p>\r\n        <p className=\"m-0 text-left ml-3\">OR</p>\r\n        <p className=\"m-0 text-left\">\r\n          *Click the locator to add your entry (<i>more accurate)</i>\r\n        </p>\r\n      </div>\r\n      <div className=\"text-left ml-2\">\r\n        <h4>Search for blood:</h4>\r\n        <select\r\n          onChange={(event) => handleBloodGroup(event.target.value)}\r\n          name=\"bloodGroupSelector\"\r\n          id=\"bloodGroupSelector\"\r\n          defaultValue=\"B+\"\r\n          className=\"form-control\"\r\n        >\r\n          <option value=\"A+\">A+</option>\r\n          <option value=\"A-\">A-</option>\r\n          <option value=\"B+\">B+</option>\r\n          <option value=\"B-\">B-</option>\r\n          <option value=\"O+\">O+</option>\r\n          <option value=\"O-\">O-</option>\r\n          <option value=\"AB+\">AB+</option>\r\n          <option value=\"AB-\">AB-</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"position-relative\">\r\n        <button\r\n          className=\"btn btn-lg btn-outline-info\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setShowInfo(!showInfo);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        {showInfo && (\r\n          <p className=\"info-div\">\r\n            As this was just made for learning purposes, all the info that are\r\n            here right now can't be verified. Information are added by users\r\n            themselves. If you are up for giving blood, you can add your entry.\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DonorInfo({ donor, handleEntryDelete }) {\r\n  const { _id, name, bloodGroup, address, contact } = donor;\r\n  const [passwordInput, setPasswordInput] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [invalid, setInvalid] = useState(false);\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`/api/blood/delete/${_id}`, {\r\n        password,\r\n      })\r\n      .then(() => handleEntryDelete())\r\n      .catch((error) => {\r\n        setPassword(\"\");\r\n        setInvalid(true);\r\n        setTimeout(() => {\r\n          setInvalid(false);\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"donor-info\">\r\n      <p className=\"text-left\">{name}</p>\r\n      <p className=\"text-left text-danger\">\r\n        <strong>{bloodGroup}</strong>\r\n      </p>\r\n      <p className=\"text-left\">{address}</p>\r\n      <p className=\"text-left\">\r\n        <i>{contact}</i>\r\n      </p>\r\n      <div className=\"position-relative overflow-hidden\">\r\n        <button\r\n          onClick={() => setPasswordInput(true)}\r\n          className=\"btn btn-sm btn-block btn-danger\"\r\n        >\r\n          Delete Entry\r\n        </button>\r\n        {passwordInput && (\r\n          <form onSubmit={handleDelete}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              className=\"password-input form-control\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </form>\r\n        )}\r\n        {invalid && (\r\n          <div className=\"alert-danger mt-2 p-1\">\r\n            <small className=\"d-block text-left\">Wrong password</small>\r\n            <small className=\"d-block text-left\">Don't mess around</small>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactMapGL, { Marker, GeolocateControl } from \"react-map-gl\";\nimport axios from \"axios\";\nimport DonorForm from \"./DonorForm\";\nimport Nav from \"./Nav\";\nimport DonorInfo from \"./DonorInfo\";\n\nfunction App() {\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 23.770885,\n    longitude: 90.3949981,\n    zoom: 15,\n  });\n  const [donors, setDonors] = useState(null);\n  const [modal, setModal] = useState(false);\n  const [submission, setSubmission] = useState(false);\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n  const [bloodGroup, setBloodGroup] = useState(\"B+\");\n  const [showPopUp, setShowPopUp] = useState({});\n  const [entryDeleted, setEntryDeleted] = useState(0);\n\n  useEffect(() => {\n    const getDonor = async () => {\n\t  const res = await axios.get(\"/api/blood/\");\n      setDonors(res.data);\n    };\n\n    getDonor();\n  }, [submission, entryDeleted]);\n\n  const openModal = async (lat, long) => {\n    setModal(!modal);\n    setLat(lat);\n    setLong(long);\n  };\n\n  const geolocateStyle = {\n    float: \"left\",\n    margin: \"120px 50px\",\n    padding: \"10px\",\n  };\n\n  const handleBloodGroup = (bg) => {\n\tsetBloodGroup(bg)\n\tsetModal(false)\n  }\n  const handleEntryDelete = () => {\n    setEntryDeleted(entryDeleted + 1);\n  };\n\n  const submitForm = async (name, bg, address, contact, password) => {\n    const formData = {\n      name,\n      bloodGroup: bg,\n      address,\n      contact,\n      password,\n      latitude: lat,\n      longitude: long,\n    };\n    await axios.post(\"/api/blood/\", formData);\n    setModal(false);\n    setSubmission(true);\n    setTimeout(() => {\n      setSubmission(false);\n    }, 2500);\n  };\n\n  return (\n    <div className=\"App\">\n\t  <Nav handleBloodGroup={handleBloodGroup} />\n      <ReactMapGL\n        mapboxApiAccessToken={TOKEN}\n        {...viewport}\n        onViewportChange={setViewport}\n        onClick={() => setShowPopUp({})}\n        onDblClick={(event) => openModal(event.lngLat[1], event.lngLat[0])}\n        doubleClickZoom={false}\n      >\n        {submission ? (\n          <div className=\"success-alert\">\n            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n            <span>Submitted successfully!</span>\n          </div>\n        ) : null}\n        {modal && (\n          <DonorForm\n            submitForm={submitForm}\n            closeButton={() => setModal(false)}\n          />\n        )}\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{ enableHighAccuracy: true }}\n          trackUserLocation={false}\n          onGeolocate={(obj) =>\n            openModal(obj.coords.latitude, obj.coords.longitude)\n          }\n        />\n        {donors\n          ? donors.map((donor) => {\n              return donor.bloodGroup === bloodGroup ? (\n                <Marker\n                  latitude={donor.latitude}\n                  longitude={donor.longitude}\n                  offsetLeft={-20}\n                  offsetTop={-10}\n                  key={donor._id}\n                >\n                  <i\n                    onClick={() => setShowPopUp({ [donor._id]: true })}\n                    className=\"fa fa-tint fa-2x text-danger\"\n                    style={{ cursor: \"pointer\" }}\n                    aria-hidden=\"true\"\n                  ></i>\n                  {showPopUp[donor._id] === true ? (\n                    <DonorInfo\n                      handleEntryDelete={handleEntryDelete}\n                      donor={donor}\n                    />\n                  ) : null}\n                </Marker>\n              ) : null;\n            })\n          : null}\n      </ReactMapGL>\n    </div>\n  );\n}\n//\nconst TOKEN =\n  \"pk.eyJ1IjoiZmF5ZWF6YWhtZWQiLCJhIjoiY2tjYW5paHF2MWtsMjJycWVkMzB2YzAwcyJ9.ZuCDw7Z9JflJotaK8TRLhQ\";\n\nexport default App;\n\n/* <Marker\n\t\t\tlatitude={donor.latitude}\n\t\t\tlongitude={donor.longitude}\n\t\t\toffsetLeft={-20}\n\t\t\toffsetTop={-10}\n\t\t\tkey={donor._id}\n\t\t  >\n\t\t\t<i\n\t\t\t  //onClick={() => setShowPopUp({ [donor._id]: true })}\n\t\t\t  className=\"fa fa-tint fa-2x text-danger\"\n\t\t\t  aria-hidden=\"true\"\n\t\t\t></i>\n\t\t  </Marker> */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}